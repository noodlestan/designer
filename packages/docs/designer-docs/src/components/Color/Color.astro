---
import { getCollection } from 'astro:content';

interface Props {
    d: string;
    name?: boolean;
    model?: boolean;
    params?: boolean;
    value?: boolean | string | string[];
    usage?: boolean;
    contexts?: boolean;
    data?: boolean;
}

const {
    d,
    name: showName,
    model: showModel,
    params: showParams,
    value: showValues,
    usage: showUsage,
    contexts: showContexts,
    data: showData,
} = Astro.props;

const decisions = await getCollection('decisions');
const decision = decisions.find(decision => decision.data.name === d);

const color = decision?.data.params.value;
---

<div class="dd-color">
    <div class="dd-color--viz"></div>
    {showName ? <div class="dd-color--name">{d}</div> : null}
    {
        (showModel || showParams || showValues || showUsage || showContexts) && (
            <div>
                {showModel ? decision?.data.type : null}
                {showParams ? decision?.data.params.value : null}
                {showValues ? decision?.data.params.value : null}
                {showUsage ? decision?.data.usage : null}
                {showContexts ? decision?.data.contexts : null}
            </div>
        )
    }
    {
        showData && (
            <pre>
                <code>{JSON.stringify(decision, undefined, 2)}</code>
            </pre>
        )
    }
</div>

<style define:vars={{ color: color }}>
    .dd-color {
        color: var(--sl-color-text);
    }
    .dd-color--viz {
        width: 100px;
        height: 100px;
        background-color: var(--color);
        border-radius: 10px;
    }

    .dd-color :global(a) {
        color: var(--__sl-banner-text);
    }
</style>
