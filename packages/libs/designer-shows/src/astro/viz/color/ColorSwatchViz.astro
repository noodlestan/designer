---
import { ShowError } from '../../atoms';
import type { ColorVizProps } from '../../types';

type Props = ColorVizProps;

const { value: color, size = 'auto', muteErrors } = Astro.props;

const hsl = color?.toString('oklch');
const showErrors = !muteErrors && color?.context().hasErrors();
---

<div class:list={['dd-color-swatch-viz', size]}>
    {showErrors && <ShowError size="s" position="block" />}
    <div class="dd-swatch"></div>
</div>

<style define:vars={{ color: hsl }}>
    .dd-color-swatch-viz {
        position: relative;
        width: 100%;
        min-width: var(--dd-viz-min-width);
    }

    .dd-color-swatch-viz :global(.dd-show-error) {
        position: absolute;
        inset: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 2;
    }

    .xs {
        min-width: var(--dd-viz-size-xs);
        max-width: var(--dd-viz-size-xs);
    }

    .s {
        min-width: var(--dd-viz-size-s);
        max-width: var(--dd-viz-size-s);
    }

    .m {
        min-width: var(--dd-viz-size-m);
        max-width: var(--dd-viz-size-m);
    }

    .l {
        min-width: var(--dd-viz-size-l);
        max-width: var(--dd-viz-size-l);
    }

    .xl {
        min-width: var(--dd-viz-size-xl);
        max-width: var(--dd-viz-size-xl);
    }

    .dd-swatch {
        width: 100%;
        min-height: var(--dd-viz-min-width);
        aspect-ratio: 1 / 1;
        background-color: var(--color);
        border: var(--dd-color-viz-border);
        border-radius: var(--dd-color-viz-border-radius);
    }
</style>
