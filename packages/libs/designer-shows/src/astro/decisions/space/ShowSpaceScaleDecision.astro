---
import { isSpaceScaleDecision } from '@noodlestan/designer-decisions';

import type { ShowDecisionProps } from '../../types';
import { resolveDecisionProp } from '../../helpers';
import { FlexStack } from '../../layouts';
import ShowSpaceValue from '../../primitives/space/ShowSpaceValue.astro';
import { ShowDecisionUnavailable } from '../unavailable';

type Props = ShowDecisionProps;

const { store, d, size, ...rest } = Astro.props;

const decision = resolveDecisionProp(store, d);
const spaceScale =
    decision && isSpaceScaleDecision(decision) ? decision.produce().value() : undefined;

const items = spaceScale?.get();

const s = size || 's';
---

{
    decision && (
        <FlexStack>
            {items?.map(item => (
                <ShowSpaceValue space={item} size={s} {...rest} />
            ))}
        </FlexStack>
    )
}
{!decision && <ShowDecisionUnavailable d={d as string} />}
