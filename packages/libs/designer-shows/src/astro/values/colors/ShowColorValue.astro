---
import { type ColorSpaceName, type ColorValue } from '@noodlestan/designer-decisions';

import { DecisionValue } from '../../atoms';
import { ColorViz } from '../../viz';
import type { ShowValueProps } from '../../types';
import { FlexStack } from '../../layouts';

type Props = ShowValueProps & {
    v?: ColorValue;
};

const { v: colorValue, value = true, viz = true, size = 'auto' } = Astro.props;

const spaces: ColorSpaceName[] | null =
    typeof value === 'boolean' && value
        ? ['rgb']
        : typeof value === 'string'
          ? [value as ColorSpaceName]
          : Array.isArray(value)
            ? (value as ColorSpaceName[])
            : null;
---

<div class:list={['dd-show-color-value', { size }]}>
    {viz && colorValue && <ColorViz value={colorValue} size={size} />}
    {
        value && colorValue !== undefined && (
            <FlexStack>
                {spaces?.map(space => (
                    <DecisionValue>{colorValue.getString(space)}</DecisionValue>
                ))}
            </FlexStack>
        )
    }
</div>

<style>
    .dd-show-color-value {
        display: flex;
        gap: var(--dd-space-gap);
    }
</style>
